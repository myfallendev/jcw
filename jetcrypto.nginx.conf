proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:20m max_size=600m use_temp_path=off;

server {
    listen 80 default_server;
    listen [::]:80 default_server;

    # redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2 deferred;
    server_name beta.jetcrypto.com;
#    return 301 https://jetcrypto.com$request_uri;
    ssl_certificate /etc/letsencrypt/live/beta.jetcrypto.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/beta.jetcrypto.com/privkey.pem; # managed by Certbot
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
    ssl_session_tickets off;

    # curl https://ssl-config.mozilla.org/ffdhe2048.txt > /etc/nginx/dhparam.pem
    ssl_dhparam /etc/nginx/dhparam.pem;

    # intermediate configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

	# OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;

	root /var/www/html/jetcrypto;

	# Add index.php to the list if you are using PHP
	index index.html;

	# Allow Let's encrypt webroot cert renewal
	location ~ /.well-known {
		allow all;
	}

	# Protect resources starting with dot .htaccess .svn .ssh etc
	location ~ /\. {

		deny all;
		return 404;
	}

	# Prevent clients from accessing to backup/config/source files
	location ~* (?:\.(?:bak|conf|dist|fla|in[ci]|log|psd|sh|sql|sw[op])|~)$ {

		deny all;
	}

	# don't send the nginx version number in error pages and Server header
	server_tokens off;

	location / {

		# Security
		#add_header X-Frame-Options SAMEORIGIN;
		#add_header Content-Security-Policy "default-src 'self' https://*.gstatic.com https://*.googleapis.com 'unsafe-inline';" always;
		add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
		#add_header X-XSS-Protection "1; mode=block";

		# Server push (experimental)
		http2_push /bootstrap.css;
		http2_push /style.css;
		#add_header Link "</bootstrap.css>; rel=preload; as=style";
		#add_header Link "</style.css>; rel=preload; as=style";

		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ /index.html =404;
		
		
		if ($request_method = 'OPTIONS') {
			add_header 'Access-Control-Allow-Origin' '*';
			#
			# Om nom nom cookies
			#
			add_header 'Access-Control-Allow-Credentials' 'true';
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
			#
			# Custom headers and headers various browsers *should* be OK with but aren't
			#
			add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
			#
			# Tell client that this pre-flight info is valid for 20 days
			#
			add_header 'Access-Control-Max-Age' 1728000;
			add_header 'Content-Type' 'text/plain charset=UTF-8';
			add_header 'Content-Length' 0;
			return 200;
		 }		
    }


	# Access to special pages restriction by ip

	location ~* /(metadata|swagger) {
		proxy_pass http://127.0.0.1:2001;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection keep-alive;
		proxy_set_header Host $host;
		proxy_cache_bypass $http_upgrade;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

	}

	# Pass non-static content to backend
	location ~* /(api|avatar|qr) {

		allow 213.33.213.57; # Office
		allow 144.76.155.58; # Jenkins
		
		proxy_pass http://127.0.0.1:2001;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection keep-alive;
		proxy_set_header Host $host;
		proxy_cache_bypass $http_upgrade;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

		if ($http_origin ~* (app\.tokki\.tk)) {
			set $cors "true";
		}
		if ($request_method = 'OPTIONS') {
			set $cors '${cors}_options'; 
		}
		
		if ($cors = "true_options") {
			add_header 'Access-Control-Allow-Origin' '$http_origin';
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT';
			add_header 'Access-Control-Allow-Credentials' 'true';
			#
			# Custom headers and headers various browsers *should* be OK with but aren't
			#
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type,vereficationtype,verificationcode';
			return 204;
		}

		add_header X-Frame-Options SAMEORIGIN;
		add_header X-XSS-Protection "1; mode=block";

    }
	 location ~* /(update) {
		proxy_pass http://127.0.0.1:2001;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection keep-alive;
		proxy_set_header Host $host;
		proxy_cache_bypass $http_upgrade;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

#                proxy_cache my_cache;
		add_header Access-Control-Allow-Origin *;

		add_header X-Frame-Options SAMEORIGIN;
		add_header X-XSS-Protection "1; mode=block";

		add_header Debug-Cache-Status $upstream_cache_status; # For debugging!
		#For download content
		add_header Content-Disposition "attachment";
		add_header Content-Type "application/force-download";
		add_header Content-Type "application/octet-stream";
    }

     location ~* /(admin) {
error_page 404 =302 https://dashboard.jetcrypto.com;
     }

	# Browser caching

	# No cache for service worker
	location = /service-worker.js {
    expires off;
	access_log off;
    add_header Cache-Control "no-cache, no-store, must-revalidate";
}

	# Cache local static content in browser (short living)
	location ~* \.(?:css|js|json)$ {

		expires 7d;
		access_log off;
		add_header Cache-Control "public";
	}

	# Cache local static content in browser (long living)
	location ~* \.(?:jpg|jpeg|gif|png|ico|svg|svgz|ttf|ttc|otf|eot|woff|woff2)$ {

		expires 1M; # One month
		access_log off;
		add_header Cache-Control "public";
	}

gzip on;
gzip_vary on;
#gzip_static on;
gzip_proxied any;
gzip_comp_level 6;
gzip_http_version 1.1;
gzip_min_length 256;
gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype image/svg+xml image/x-icon;


}
